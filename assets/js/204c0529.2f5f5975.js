"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[76662],{3905:function(t,e,i){i.d(e,{Zo:function(){return s},kt:function(){return _}});var n=i(67294);function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function p(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){a(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function l(t,e){if(null==t)return{};var i,n,a=function(t,e){if(null==t)return{};var i,n,a={},r=Object.keys(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||(a[i]=t[i]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)i=r[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(a[i]=t[i])}return a}var o=n.createContext({}),m=function(t){var e=n.useContext(o),i=e;return t&&(i="function"==typeof t?t(e):p(p({},e),t)),i},s=function(t){var e=m(t.components);return n.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var i=t.components,a=t.mdxType,r=t.originalType,o=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),d=m(i),_=a,k=d["".concat(o,".").concat(_)]||d[_]||u[_]||r;return i?n.createElement(k,p(p({ref:e},s),{},{components:i})):n.createElement(k,p({ref:e},s))}));function _(t,e){var i=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=i.length,p=new Array(r);p[0]=d;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=t,l.mdxType="string"==typeof t?t:a,p[1]=l;for(var m=2;m<r;m++)p[m]=i[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},49207:function(t,e,i){i.r(e),i.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return _},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return u}});var n=i(87462),a=i(63366),r=(i(67294),i(3905)),p=["components"],l={},o="StoreLimitsInput Schema",m={unversionedId:"okp4-cognitarium-instantiatemsg-definitions-storelimitsinput",id:"okp4-cognitarium-instantiatemsg-definitions-storelimitsinput",title:"StoreLimitsInput Schema",description:"Contains requested limitations regarding store usages.",source:"@site/contracts/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput.md",sourceDirName:".",slug:"/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput",permalink:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Untitled undefined type in okp4-cognitarium Schema",permalink:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count"},next:{title:"Untitled string in okp4-cognitarium Schema",permalink:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-uint128"}},s={},u=[{value:"StoreLimitsInput Type",id:"storelimitsinput-type",level:2},{value:"max_byte_size",id:"max_byte_size",level:2},{value:"max_byte_size Type",id:"max_byte_size-type",level:3},{value:"max_insert_data_byte_size",id:"max_insert_data_byte_size",level:2},{value:"max_insert_data_byte_size Type",id:"max_insert_data_byte_size-type",level:3},{value:"max_insert_data_triple_count",id:"max_insert_data_triple_count",level:2},{value:"max_insert_data_triple_count Type",id:"max_insert_data_triple_count-type",level:3},{value:"max_query_limit",id:"max_query_limit",level:2},{value:"max_query_limit Type",id:"max_query_limit-type",level:3},{value:"max_query_limit Constraints",id:"max_query_limit-constraints",level:3},{value:"max_query_variable_count",id:"max_query_variable_count",level:2},{value:"max_query_variable_count Type",id:"max_query_variable_count-type",level:3},{value:"max_query_variable_count Constraints",id:"max_query_variable_count-constraints",level:3},{value:"max_triple_byte_size",id:"max_triple_byte_size",level:2},{value:"max_triple_byte_size Type",id:"max_triple_byte_size-type",level:3},{value:"max_triple_count",id:"max_triple_count",level:2},{value:"max_triple_count Type",id:"max_triple_count-type",level:3}],d={toc:u};function _(t){var e=t.components,l=(0,a.Z)(t,p);return(0,r.kt)("wrapper",(0,n.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"storelimitsinput-schema"},"StoreLimitsInput Schema"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt"},"undefined#/instantiate/definitions/StoreLimitsInput\n")),(0,r.kt)("p",null,"Contains requested limitations regarding store usages."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Abstract"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Extensible"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Status"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Identifiable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Custom Properties"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Additional Properties"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Access Restrictions"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Defined In"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Can be instantiated"),(0,r.kt)("td",{parentName:"tr",align:"left"},"No"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unknown status"),(0,r.kt)("td",{parentName:"tr",align:"left"},"No"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Forbidden"),(0,r.kt)("td",{parentName:"tr",align:"left"},"none"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{target:"_blank",href:i(38426).Z,title:"open original schema"},"okp4-cognitarium.json*"))))),(0,r.kt)("h2",{id:"storelimitsinput-type"},"StoreLimitsInput Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"object")," (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput"},"StoreLimitsInput"),")"),(0,r.kt)("h1",{id:"storelimitsinput-properties"},"StoreLimitsInput Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Nullable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Defined by"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_byte_size"},"max","_","byte","_","size")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_byte_size"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_byte_size"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_triple_count"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_query_limit"},"max","_","query","_","limit")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"can be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_limit",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_limit"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_query_variable_count"},"max","_","query","_","variable","_","count")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"can be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_variable_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_variable_count"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_triple_byte_size"},"max","_","triple","_","byte","_","size")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_byte_size"},"okp4-cognitarium"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"#max_triple_count"},"max","_","triple","_","count")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Merged"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cannot be null"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_count"},"okp4-cognitarium"))))),(0,r.kt)("h2",{id:"max_byte_size"},"max","_","byte","_","size"),(0,r.kt)("p",null,"The maximum number of bytes the store can contains. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of ","[","Uint128::MAX] is used, which can be considered as no limit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_byte_size")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size"},"Details"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cannot be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_byte_size"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_byte_size-type"},"max","_","byte","_","size Type"),(0,r.kt)("p",null,"merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size"},"Details"),")"),(0,r.kt)("p",null,"any of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size-anyof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_byte_size-anyof-1",title:"check type definition"},"Untitled null in okp4-cognitarium")))),(0,r.kt)("h2",{id:"max_insert_data_byte_size"},"max","_","insert","_","data","_","byte","_","size"),(0,r.kt)("p",null,"The maximum number of bytes an insert data query can contains. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of ","[","Uint128::MAX] is used, which can be considered as no limit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_insert_data_byte_size")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size"},"Details"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cannot be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_byte_size"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_insert_data_byte_size-type"},"max","_","insert","_","data","_","byte","_","size Type"),(0,r.kt)("p",null,"merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size"},"Details"),")"),(0,r.kt)("p",null,"any of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size-anyof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_byte_size-anyof-1",title:"check type definition"},"Untitled null in okp4-cognitarium")))),(0,r.kt)("h2",{id:"max_insert_data_triple_count"},"max","_","insert","_","data","_","triple","_","count"),(0,r.kt)("p",null,"The maximum number of triples an insert data query can contains (after parsing). If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of ","[","Uint128::MAX] is used, which can be considered as no limit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_insert_data_triple_count")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count"},"Details"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cannot be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_insert_data_triple_count"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_insert_data_triple_count-type"},"max","_","insert","_","data","_","triple","_","count Type"),(0,r.kt)("p",null,"merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count"},"Details"),")"),(0,r.kt)("p",null,"any of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count-anyof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_insert_data_triple_count-anyof-1",title:"check type definition"},"Untitled null in okp4-cognitarium")))),(0,r.kt)("h2",{id:"max_query_limit"},"max","_","query","_","limit"),(0,r.kt)("p",null,"The maximum limit of a query, i.e. the maximum number of triples returned by a select query. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of 30 is used."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_query_limit")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"integer"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"can be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_limit",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_limit"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_query_limit-type"},"max","_","query","_","limit Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"integer")),(0,r.kt)("h3",{id:"max_query_limit-constraints"},"max","_","query","_","limit Constraints"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,r.kt)("inlineCode",{parentName:"p"},"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,r.kt)("inlineCode",{parentName:"p"},"uint32")),(0,r.kt)("h2",{id:"max_query_variable_count"},"max","_","query","_","variable","_","count"),(0,r.kt)("p",null,"The maximum number of variables a query can select. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of 30 is used."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_query_variable_count")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"integer"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"can be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_query_variable_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_query_variable_count"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_query_variable_count-type"},"max","_","query","_","variable","_","count Type"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"integer")),(0,r.kt)("h3",{id:"max_query_variable_count-constraints"},"max","_","query","_","variable","_","count Constraints"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"minimum"),": the value of this number must greater than or equal to: ",(0,r.kt)("inlineCode",{parentName:"p"},"0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"unknown format"),": the value of this string must follow the format: ",(0,r.kt)("inlineCode",{parentName:"p"},"uint32")),(0,r.kt)("h2",{id:"max_triple_byte_size"},"max","_","triple","_","byte","_","size"),(0,r.kt)("p",null,"The maximum number of bytes the store can contains for a single triple. The size of a triple is counted as the sum of the size of its subject, predicate and object, including the size of data types and language tags if any. The limit is used to prevent storing very large triples, especially literals. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of ","[","Uint128::MAX] is used, which can be considered as no limit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_triple_byte_size")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size"},"Details"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cannot be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_byte_size"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_triple_byte_size-type"},"max","_","triple","_","byte","_","size Type"),(0,r.kt)("p",null,"merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size"},"Details"),")"),(0,r.kt)("p",null,"any of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size-anyof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_byte_size-anyof-1",title:"check type definition"},"Untitled null in okp4-cognitarium")))),(0,r.kt)("h2",{id:"max_triple_count"},"max","_","triple","_","count"),(0,r.kt)("p",null,"The maximum number of triples the store can contains. If ",(0,r.kt)("inlineCode",{parentName:"p"},"None"),", the default value of ","[","Uint128::MAX] is used, which can be considered as no limit."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"max_triple_count")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"is optional")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Type: merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count"},"Details"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cannot be null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defined in: ",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count",title:"undefined#/instantiate/definitions/StoreLimitsInput/properties/max_triple_count"},"okp4-cognitarium")))),(0,r.kt)("h3",{id:"max_triple_count-type"},"max","_","triple","_","count Type"),(0,r.kt)("p",null,"merged type (",(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count"},"Details"),")"),(0,r.kt)("p",null,"any of"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count-anyof-0",title:"check type definition"},"Untitled undefined type in okp4-cognitarium"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"/contracts/next/okp4-cognitarium-instantiatemsg-definitions-storelimitsinput-properties-max_triple_count-anyof-1",title:"check type definition"},"Untitled null in okp4-cognitarium")))))}_.isMDXComponent=!0},38426:function(t,e,i){e.Z=i.p+"assets/files/okp4-cognitarium-bb5a56e596d5171a2fee1698d4808ad4.json"}}]);