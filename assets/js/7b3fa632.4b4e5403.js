"use strict";(self.webpackChunk_okp4_docs=self.webpackChunk_okp4_docs||[]).push([[9516],{96887:function(t,e,a){a.r(e),a.d(e,{assets:function(){return g},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return k}});var n=a(87462),l=a(63366),r=(a(67294),a(3905)),i=["components"],p={},u=void 0,m={unversionedId:"logic",id:"logic",title:"logic",description:"[//]: # (This file is auto-generated. Please do not modify it yourself.)",source:"@site/modules/logic.md",sourceDirName:".",slug:"/logic",permalink:"/modules/logic",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",next:{title:"vesting",permalink:"/modules/vesting"}},g={},k=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"logic/v1beta/params.proto",id:"logicv1betaparamsproto",level:2},{value:"Params",id:"params",level:3},{value:"logic/v1beta/genesis.proto",id:"logicv1betagenesisproto",level:2},{value:"GenesisState",id:"genesisstate",level:3},{value:"logic/v1beta/query.proto",id:"logicv1betaqueryproto",level:2},{value:"QueryServiceParamsRequest",id:"queryserviceparamsrequest",level:3},{value:"QueryServiceParamsResponse",id:"queryserviceparamsresponse",level:3},{value:"QueryService",id:"queryservice",level:3},{value:"logic/v1beta/tx.proto",id:"logicv1betatxproto",level:2},{value:"MsgService",id:"msgservice",level:3},{value:"Scalar Value Types",id:"scalar-value-types",level:2}],o={toc:k};function d(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"protobuf-documentation"},"Protobuf Documentation"),(0,r.kt)("a",{name:"top"}),(0,r.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic/v1beta/params.proto"},"logic/v1beta/params.proto")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#logic.v1beta.Params"},"Params")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic/v1beta/genesis.proto"},"logic/v1beta/genesis.proto")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#logic.v1beta.GenesisState"},"GenesisState")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic/v1beta/query.proto"},"logic/v1beta/query.proto")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic.v1beta.QueryServiceParamsRequest"},"QueryServiceParamsRequest"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic.v1beta.QueryServiceParamsResponse"},"QueryServiceParamsResponse"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic.v1beta.QueryService"},"QueryService"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#logic/v1beta/tx.proto"},"logic/v1beta/tx.proto")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#logic.v1beta.MsgService"},"MsgService")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#scalar-value-types"},"Scalar Value Types")))),(0,r.kt)("a",{name:"logic/v1beta/params.proto"}),(0,r.kt)("p",{align:"right"},(0,r.kt)("a",{href:"#top"},"Top")),(0,r.kt)("h2",{id:"logicv1betaparamsproto"},"logic/v1beta/params.proto"),(0,r.kt)("a",{name:"logic.v1beta.Params"}),(0,r.kt)("h3",{id:"params"},"Params"),(0,r.kt)("p",null,"Params defines the parameters for the module."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Label"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"foo")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#string"},"string")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"foo represents a metasyntactic variable for testing purposes.")))),(0,r.kt)("a",{name:"logic/v1beta/genesis.proto"}),(0,r.kt)("p",{align:"right"},(0,r.kt)("a",{href:"#top"},"Top")),(0,r.kt)("h2",{id:"logicv1betagenesisproto"},"logic/v1beta/genesis.proto"),(0,r.kt)("a",{name:"logic.v1beta.GenesisState"}),(0,r.kt)("h3",{id:"genesisstate"},"GenesisState"),(0,r.kt)("p",null,"GenesisState defines the logic module's genesis state."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Label"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#logic.v1beta.Params"},"Params")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The state parameters for the logic module.")))),(0,r.kt)("a",{name:"logic/v1beta/query.proto"}),(0,r.kt)("p",{align:"right"},(0,r.kt)("a",{href:"#top"},"Top")),(0,r.kt)("h2",{id:"logicv1betaqueryproto"},"logic/v1beta/query.proto"),(0,r.kt)("a",{name:"logic.v1beta.QueryServiceParamsRequest"}),(0,r.kt)("h3",{id:"queryserviceparamsrequest"},"QueryServiceParamsRequest"),(0,r.kt)("p",null,"QueryServiceParamsRequest is request type for the QueryService/Params RPC method."),(0,r.kt)("a",{name:"logic.v1beta.QueryServiceParamsResponse"}),(0,r.kt)("h3",{id:"queryserviceparamsresponse"},"QueryServiceParamsResponse"),(0,r.kt)("p",null,"QueryServiceParamsResponse is response type for the QueryService/Params RPC method."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Label"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#logic.v1beta.Params"},"Params")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"params holds all the parameters of this module.")))),(0,r.kt)("a",{name:"logic.v1beta.QueryService"}),(0,r.kt)("h3",{id:"queryservice"},"QueryService"),(0,r.kt)("p",null,"QueryService defines the gRPC querier service."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Request Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Response Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"HTTP Verb"),(0,r.kt)("th",{parentName:"tr",align:null},"Endpoint"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Params")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#logic.v1beta.QueryServiceParamsRequest"},"QueryServiceParamsRequest")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#logic.v1beta.QueryServiceParamsResponse"},"QueryServiceParamsResponse")),(0,r.kt)("td",{parentName:"tr",align:null},"Parameters queries the parameters of the module."),(0,r.kt)("td",{parentName:"tr",align:null},"GET"),(0,r.kt)("td",{parentName:"tr",align:null},"/okp4/okp4d/logic/params")))),(0,r.kt)("a",{name:"logic/v1beta/tx.proto"}),(0,r.kt)("p",{align:"right"},(0,r.kt)("a",{href:"#top"},"Top")),(0,r.kt)("h2",{id:"logicv1betatxproto"},"logic/v1beta/tx.proto"),(0,r.kt)("a",{name:"logic.v1beta.MsgService"}),(0,r.kt)("h3",{id:"msgservice"},"MsgService"),(0,r.kt)("p",null,"Msg defines the Msg service."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Request Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Response Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"HTTP Verb"),(0,r.kt)("th",{parentName:"tr",align:null},"Endpoint")))),(0,r.kt)("h2",{id:"scalar-value-types"},"Scalar Value Types"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},".proto Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"),(0,r.kt)("th",{parentName:"tr",align:null},"C++"),(0,r.kt)("th",{parentName:"tr",align:null},"Java"),(0,r.kt)("th",{parentName:"tr",align:null},"Python"),(0,r.kt)("th",{parentName:"tr",align:null},"Go"),(0,r.kt)("th",{parentName:"tr",align:null},"C#"),(0,r.kt)("th",{parentName:"tr",align:null},"PHP"),(0,r.kt)("th",{parentName:"tr",align:null},"Ruby"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"double"})," double"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float64"),(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"Float")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"float"})," float"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float32"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"Float")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"int32"})," int32"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead."),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"int64"})," int64"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead."),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"integer/string"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"uint32"})," uint32"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding."),(0,r.kt)("td",{parentName:"tr",align:null},"uint32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"uint32"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"uint64"})," uint64"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding."),(0,r.kt)("td",{parentName:"tr",align:null},"uint64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64"),(0,r.kt)("td",{parentName:"tr",align:null},"ulong"),(0,r.kt)("td",{parentName:"tr",align:null},"integer/string"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"sint32"})," sint32"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s."),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"sint64"})," sint64"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s."),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"integer/string"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"fixed32"})," fixed32"),(0,r.kt)("td",{parentName:"tr",align:null},"Always four bytes. More efficient than uint32 if values are often greater than 2^28."),(0,r.kt)("td",{parentName:"tr",align:null},"uint32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"uint32"),(0,r.kt)("td",{parentName:"tr",align:null},"uint"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"fixed64"})," fixed64"),(0,r.kt)("td",{parentName:"tr",align:null},"Always eight bytes. More efficient than uint64 if values are often greater than 2^56."),(0,r.kt)("td",{parentName:"tr",align:null},"uint64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64"),(0,r.kt)("td",{parentName:"tr",align:null},"ulong"),(0,r.kt)("td",{parentName:"tr",align:null},"integer/string"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"sfixed32"})," sfixed32"),(0,r.kt)("td",{parentName:"tr",align:null},"Always four bytes."),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"int32"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum or Fixnum (as required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"sfixed64"})," sfixed64"),(0,r.kt)("td",{parentName:"tr",align:null},"Always eight bytes."),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"int/long"),(0,r.kt)("td",{parentName:"tr",align:null},"int64"),(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"integer/string"),(0,r.kt)("td",{parentName:"tr",align:null},"Bignum")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"bool"})," bool"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"TrueClass/FalseClass")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"string"})," string"),(0,r.kt)("td",{parentName:"tr",align:null},"A string must always contain UTF-8 encoded or 7-bit ASCII text."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"str/unicode"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"String (UTF-8)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"bytes"})," bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"May contain any arbitrary sequence of bytes."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"ByteString"),(0,r.kt)("td",{parentName:"tr",align:null},"str"),(0,r.kt)("td",{parentName:"tr",align:null},"[]byte"),(0,r.kt)("td",{parentName:"tr",align:null},"ByteString"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"String (ASCII-8BIT)")))))}d.isMDXComponent=!0}}]);